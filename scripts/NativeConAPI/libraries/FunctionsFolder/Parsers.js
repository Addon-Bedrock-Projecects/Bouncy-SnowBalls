export function ParseArguments(text) {
    return text.match(
        /(([\$\#\!\.\%\&]|@([aespr]|initiator))((?<d>\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}])*\}))*\}))*\}))*\}))*\}))*\})|(?<s>\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]])*\]))*\]))*\]))*\]))*\]))*\])))|(([^ \n\r]|)(("[^"]+")|('[^']+')|({[^\}]+})|(\[[^\]]+\])))|([^ \n\r]+)/g);
    //(("[^"]+")|('[^']+')|({[^\}]+})|(\[[^\]]+\]))|((\$|@([aespr]|initiator))(([{["'][^"'}\]]+[\]}"'])([^ ]|[^[{"']+["\]}'])+))|([^ ]+)
    //(("[^"]+")|('[^']+')|({[^}]+})|(\[[^\]]+\]))|([^ ]+)
    //JSON   \$(?<j>\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}])*\}))*\}))*\}))*\})
    //=>((\$|@([aespr]|initiator))((?<d>\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}]|(\{(?:[^{}])*\}))*\}))*\}))*\}))*\}))*\})|(?<s>\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]]|(\[(?:[^\[\]])*\]))*\]))*\]))*\]))*\]))*\])))|(("[^"]+")|('[^']+')|({[^\}]+})|(\[[^\]]+\]))|([^ \n\r]+)
}
export function ParsePlayer(text){
    if (text.startsWith("@"))
        text = text.substring(1);
    if(text.startsWith('"'))
        text = text.substring(1, text.length-1);
    return text;
}
export function GetObject(text){
    try {
        return new Function(`return ${text}`).call();
    } catch (error) {
        console.warn(error);
        return null;
    }
}